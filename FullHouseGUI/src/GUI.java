/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.sql.Date;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Bart
 */
public class GUI extends javax.swing.JFrame {

    private Docent curDocent;

    /**
     * Creates new form GUI
     */
    public GUI() {
        initComponents();
        buttonGroup1.add(spelerToernooiButton);
        buttonGroup1.add(spelerMasterclassButton);
        showLijstSpelers();
        getToernooiList();
        getMasterClassList();
        fillSelecteerDocentList();
        spelerWijzigButton.setEnabled(false);

        text1.setEnabled(false);
        text2.setEnabled(false);
        text3.setEnabled(false);
        fillZoekComboBox();
        spelerVerwijderButton.setEnabled(false);

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        inschrijvingToernooiFrame = new javax.swing.JFrame();
        jScrollPane3 = new javax.swing.JScrollPane();
        toernooiInschrijvingTable = new javax.swing.JTable();
        jLabel14 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        totaaInschrijvingenlField = new javax.swing.JTextField();
        jToggleButton1 = new javax.swing.JToggleButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jFrame2 = new javax.swing.JFrame();
        jScrollPane6 = new javax.swing.JScrollPane();
        jList5 = new javax.swing.JList();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        jButton10 = new javax.swing.JButton();
        jTextField19 = new javax.swing.JTextField();
        selectDocentFrame = new javax.swing.JFrame();
        jScrollPane8 = new javax.swing.JScrollPane();
        selecteerDocentList = new javax.swing.JList();
        masterclassDocentWasSelectedButton = new javax.swing.JButton();
        docentTab = new javax.swing.JTabbedPane();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        jList3 = new javax.swing.JList();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel18 = new javax.swing.JLabel();
        jTextField15 = new javax.swing.JTextField();
        jTextField16 = new javax.swing.JTextField();
        jTextField17 = new javax.swing.JTextField();
        jTextField18 = new javax.swing.JTextField();
        jButton6 = new javax.swing.JButton();
        jScrollPane7 = new javax.swing.JScrollPane();
        jList6 = new javax.swing.JList();
        jComboBox2 = new javax.swing.JComboBox();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane5 = new javax.swing.JScrollPane();
        masterclassList = new javax.swing.JList();
        jLabel27 = new javax.swing.JLabel();
        masterclassPlaatsField = new javax.swing.JTextField();
        jLabel28 = new javax.swing.JLabel();
        masterclassDatumField = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        masterclassTijdField = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        masterclassInschrijfgeldField = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        masterclassMinRatingField = new javax.swing.JTextField();
        masterclassWijzigButton = new javax.swing.JButton();
        toernooiInschrijvingenButton1 = new javax.swing.JButton();
        masterclassToevoegButton = new javax.swing.JButton();
        jLabel32 = new javax.swing.JLabel();
        masterclassDocentField = new javax.swing.JTextField();
        masterclassDocentButton = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        lijstSpelers = new javax.swing.JList();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        spelerVoornaamField = new javax.swing.JTextField();
        spelerStraatField = new javax.swing.JTextField();
        spelerTelThuisField = new javax.swing.JTextField();
        spelerThuisMobielField = new javax.swing.JTextField();
        spelerEmailField = new javax.swing.JTextField();
        spelerWijzigButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        text1 = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        spelerRatingField = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        gewonnengeld = new javax.swing.JTextField();
        jComboBox1 = new javax.swing.JComboBox();
        spelerSchrijfButton = new javax.swing.JButton();
        spelerToernooiButton = new javax.swing.JRadioButton();
        spelerMasterclassButton = new javax.swing.JRadioButton();
        spelerVoegButton = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jLabel23 = new javax.swing.JLabel();
        spelerTussenField = new javax.swing.JTextField();
        jLabel24 = new javax.swing.JLabel();
        spelerAchternaamField = new javax.swing.JTextField();
        spelerPostcodeField = new javax.swing.JTextField();
        jLabel25 = new javax.swing.JLabel();
        spelerNummerFIeld = new javax.swing.JTextField();
        jLabel26 = new javax.swing.JLabel();
        spelerPlaatsField = new javax.swing.JTextField();
        text2 = new javax.swing.JTextField();
        text3 = new javax.swing.JTextField();
        spelerVerwijderButton = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        toernooiList = new javax.swing.JList();
        jLabel7 = new javax.swing.JLabel();
        toernooiPlaatsField = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        toernooiDatumField = new javax.swing.JTextField();
        jLabel11 = new javax.swing.JLabel();
        toernooiTijdField = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        toernooiInschrijfgeldField = new javax.swing.JTextField();
        toernooiRondesField = new javax.swing.JTextField();
        toernooiInschrijvingenButton = new javax.swing.JButton();
        toernooiWijzigButton = new javax.swing.JButton();
        toernooiToevoegButton = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jScrollPane9 = new javax.swing.JScrollPane();
        lijstDocenten = new javax.swing.JList();
        jLabel33 = new javax.swing.JLabel();
        jLabel34 = new javax.swing.JLabel();
        jLabel35 = new javax.swing.JLabel();
        jLabel36 = new javax.swing.JLabel();
        jLabel37 = new javax.swing.JLabel();
        docentVoornaamField = new javax.swing.JTextField();
        docentStraatField = new javax.swing.JTextField();
        docentVastField = new javax.swing.JTextField();
        docentMobielField = new javax.swing.JTextField();
        docentEmailField = new javax.swing.JTextField();
        docentWijzigButton = new javax.swing.JButton();
        docentZoekButton = new javax.swing.JButton();
        docentZoekField1 = new javax.swing.JTextField();
        jLabel38 = new javax.swing.JLabel();
        docentRekeningField = new javax.swing.JTextField();
        docentZoekCombo = new javax.swing.JComboBox();
        docentToevoegButton = new javax.swing.JButton();
        jLabel40 = new javax.swing.JLabel();
        jLabel41 = new javax.swing.JLabel();
        docentTussenVoegselField = new javax.swing.JTextField();
        jLabel42 = new javax.swing.JLabel();
        docentAchternaamField = new javax.swing.JTextField();
        docentPostcodeField = new javax.swing.JTextField();
        jLabel43 = new javax.swing.JLabel();
        docentHuisnummerField = new javax.swing.JTextField();
        jLabel44 = new javax.swing.JLabel();
        docentPlaatsField = new javax.swing.JTextField();
        docentZoekField2 = new javax.swing.JTextField();
        docentZoekField3 = new javax.swing.JTextField();
        docentVerwijderButton = new javax.swing.JButton();

        toernooiInschrijvingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                { new Integer(123), "Ja"},
                { new Integer(321), "Nee"},
                {null, null},
                {null, null}
            },
            new String [] {
                "SpelerID", "Inschrijfgeld Betaald"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane3.setViewportView(toernooiInschrijvingTable);

        jLabel14.setText("Toernooi ID: ");

        jLabel22.setText("Totaal aantal spelers:");

        totaaInschrijvingenlField.setEditable(false);
        totaaInschrijvingenlField.setText("2");

        jToggleButton1.setText("Alleen onbetaald");

        javax.swing.GroupLayout inschrijvingToernooiFrameLayout = new javax.swing.GroupLayout(inschrijvingToernooiFrame.getContentPane());
        inschrijvingToernooiFrame.getContentPane().setLayout(inschrijvingToernooiFrameLayout);
        inschrijvingToernooiFrameLayout.setHorizontalGroup(
            inschrijvingToernooiFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inschrijvingToernooiFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(inschrijvingToernooiFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(inschrijvingToernooiFrameLayout.createSequentialGroup()
                        .addComponent(jLabel22)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(totaaInschrijvingenlField))
                    .addGroup(inschrijvingToernooiFrameLayout.createSequentialGroup()
                        .addGroup(inschrijvingToernooiFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 375, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel14)
                            .addComponent(jToggleButton1))
                        .addGap(0, 3, Short.MAX_VALUE)))
                .addContainerGap())
        );
        inschrijvingToernooiFrameLayout.setVerticalGroup(
            inschrijvingToernooiFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(inschrijvingToernooiFrameLayout.createSequentialGroup()
                .addGap(7, 7, 7)
                .addComponent(jLabel14)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 182, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(inschrijvingToernooiFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22)
                    .addComponent(totaaInschrijvingenlField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                .addComponent(jToggleButton1)
                .addContainerGap())
        );

        jList5.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "1-1-2001", "2-2-2002" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane6.setViewportView(jList5);

        jLabel19.setText("Datum");

        jLabel20.setText("Plaats");

        jButton10.setText("Schrijf speler in");

        jTextField19.setEditable(false);

        javax.swing.GroupLayout jFrame2Layout = new javax.swing.GroupLayout(jFrame2.getContentPane());
        jFrame2.getContentPane().setLayout(jFrame2Layout);
        jFrame2Layout.setHorizontalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton10, javax.swing.GroupLayout.DEFAULT_SIZE, 322, Short.MAX_VALUE)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel20)
                            .addComponent(jLabel21))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jTextField19)))
                .addContainerGap())
        );
        jFrame2Layout.setVerticalGroup(
            jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jFrame2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jFrame2Layout.createSequentialGroup()
                        .addGroup(jFrame2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(jTextField19, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel20)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel21)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton10, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 191, Short.MAX_VALUE))
                    .addComponent(jScrollPane6))
                .addContainerGap())
        );

        jScrollPane8.setViewportView(selecteerDocentList);

        masterclassDocentWasSelectedButton.setText("Selecteer");
        masterclassDocentWasSelectedButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterclassDocentWasSelectedButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout selectDocentFrameLayout = new javax.swing.GroupLayout(selectDocentFrame.getContentPane());
        selectDocentFrame.getContentPane().setLayout(selectDocentFrameLayout);
        selectDocentFrameLayout.setHorizontalGroup(
            selectDocentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(selectDocentFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane8, javax.swing.GroupLayout.PREFERRED_SIZE, 158, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 15, Short.MAX_VALUE)
                .addComponent(masterclassDocentWasSelectedButton)
                .addContainerGap())
        );
        selectDocentFrameLayout.setVerticalGroup(
            selectDocentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, selectDocentFrameLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(selectDocentFrameLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(selectDocentFrameLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(masterclassDocentWasSelectedButton))
                    .addComponent(jScrollPane8, javax.swing.GroupLayout.DEFAULT_SIZE, 244, Short.MAX_VALUE))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(153, 255, 255));

        jList3.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "Tafel1", "Tafel2", "Tafel3" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane4.setViewportView(jList3);

        jLabel15.setText("jLabel15");

        jLabel16.setText("jLabel16");

        jLabel17.setText("jLabel17");

        jLabel18.setText("jLabel18");

        jTextField15.setText("jTextField15");

        jTextField16.setText("jTextField16");

        jTextField17.setText("jTextField17");

        jTextField18.setText("jTextField18");

        jButton6.setText("Verloren");

        jList6.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "313, Jan", "832, Henk" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        jScrollPane7.setViewportView(jList6);

        jComboBox2.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Ronde 1", "Ronde 2", "Ronde 3" }));

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 86, Short.MAX_VALUE))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel15)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField15))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel16)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField16))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel18)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField18))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel17)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(jTextField17))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jButton6)
                                    .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel15)
                            .addComponent(jTextField15, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel16)
                            .addComponent(jTextField16, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel17)
                            .addComponent(jTextField17, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel18)
                            .addComponent(jTextField18, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jComboBox2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane7, javax.swing.GroupLayout.PREFERRED_SIZE, 222, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jButton6)
                        .addContainerGap(83, Short.MAX_VALUE))))
        );

        docentTab.addTab("Tafels", jPanel3);

        masterclassList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                masterclassListMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(masterclassList);

        jLabel27.setText("Plaats");

        masterclassPlaatsField.setText("jTextField8");
        masterclassPlaatsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterclassPlaatsFieldActionPerformed(evt);
            }
        });

        jLabel28.setText("Datum");

        masterclassDatumField.setText("jTextField11");

        jLabel29.setText("Tijd");

        masterclassTijdField.setText("jTextField12");

        jLabel30.setText("Inschrijfgeld");

        masterclassInschrijfgeldField.setText("jTextField13");

        jLabel31.setText("Minimum Rating");

        masterclassMinRatingField.setText("jTextField14");

        masterclassWijzigButton.setText("Wijzig");
        masterclassWijzigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterclassWijzigButtonActionPerformed(evt);
            }
        });

        toernooiInschrijvingenButton1.setText("Lijst met spelers en hun inschrijfstatus");
        toernooiInschrijvingenButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toernooiInschrijvingenButton1ActionPerformed(evt);
            }
        });

        masterclassToevoegButton.setText("Voeg toe");
        masterclassToevoegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterclassToevoegButtonActionPerformed(evt);
            }
        });

        jLabel32.setText("Docent");

        masterclassDocentField.setEditable(false);
        masterclassDocentField.setText("jTextField1");

        masterclassDocentButton.setText("Selecteer Docent");
        masterclassDocentButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                masterclassDocentButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(masterclassPlaatsField)
                            .addComponent(masterclassDatumField, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addComponent(masterclassTijdField)
                            .addComponent(masterclassInschrijfgeldField)
                            .addComponent(masterclassMinRatingField)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel27)
                                    .addComponent(jLabel28)
                                    .addComponent(jLabel29)
                                    .addComponent(jLabel31)
                                    .addComponent(jLabel30))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(toernooiInschrijvingenButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(masterclassWijzigButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(masterclassToevoegButton)))
                        .addGap(23, 23, 23))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(masterclassDocentField)
                        .addContainerGap())
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel32)
                            .addComponent(masterclassDocentButton))
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addComponent(jLabel27)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassPlaatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel28)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassDatumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel29)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassTijdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel30)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassInschrijfgeldField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel31)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassMinRatingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel32)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassDocentField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(masterclassDocentButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 130, Short.MAX_VALUE)
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(masterclassWijzigButton)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addComponent(masterclassToevoegButton)
                                .addGap(18, 18, 18)))
                        .addComponent(toernooiInschrijvingenButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane5))
                .addContainerGap())
        );

        docentTab.addTab("Masterclassen", jPanel4);

        lijstSpelers.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "--Nieuwe Speler--", "Piet Pieterson", "Henk Henkstra" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lijstSpelers.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lijstSpelersMouseClicked(evt);
            }
        });
        lijstSpelers.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lijstSpelersValueChanged(evt);
            }
        });
        jScrollPane1.setViewportView(lijstSpelers);

        jLabel1.setText("Voornaam");

        jLabel2.setText("Straat");

        jLabel3.setText("Telefoon - Thuis");

        jLabel4.setText("Telefoon - Mobiel");

        jLabel5.setText("Email");

        spelerWijzigButton.setText("Wijzig");
        spelerWijzigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerWijzigButtonActionPerformed(evt);
            }
        });

        jButton2.setText("Zoek op");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jLabel9.setText("Rating");

        spelerRatingField.setEditable(false);

        jLabel10.setText("Gewonnen Geld");

        gewonnengeld.setEditable(false);

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Naam" }));

        spelerSchrijfButton.setText("Schrijf speler in voor");
        spelerSchrijfButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerSchrijfButtonActionPerformed(evt);
            }
        });

        spelerToernooiButton.setText("Toernooi");

        spelerMasterclassButton.setText("Masterclass");

        spelerVoegButton.setText("Voeg speler toe");
        spelerVoegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerVoegButtonActionPerformed(evt);
            }
        });

        jLabel6.setText("Postcode");

        jLabel23.setText("Tussenvoegsel");

        jLabel24.setText("Achternaam");

        spelerAchternaamField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerAchternaamFieldActionPerformed(evt);
            }
        });

        jLabel25.setText("Huisnr");

        spelerNummerFIeld.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerNummerFIeldActionPerformed(evt);
            }
        });

        jLabel26.setText("Plaats");

        spelerPlaatsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                spelerPlaatsFieldActionPerformed(evt);
            }
        });

        spelerVerwijderButton.setText("Verwijder");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel2)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spelerPostcodeField))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel25, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(spelerNummerFIeld))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel26)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spelerPlaatsField)
                                .addContainerGap())))
                    .addComponent(spelerTelThuisField)
                    .addComponent(spelerThuisMobielField)
                    .addComponent(spelerEmailField)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(spelerVoornaamField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spelerTussenField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel1)
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel23)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel24)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(spelerAchternaamField)))
                            .addComponent(spelerStraatField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(spelerWijzigButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(spelerVerwijderButton)
                                .addGap(18, 18, 18)
                                .addComponent(spelerVoegButton))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(jButton2)
                                .addGap(18, 18, 18)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(text1)
                                    .addComponent(text2)
                                    .addComponent(text3)))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spelerRatingField, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGap(18, 18, 18)
                                        .addComponent(gewonnengeld, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(spelerSchrijfButton)
                                        .addGap(18, 18, 18)
                                        .addComponent(spelerToernooiButton)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(spelerMasterclassButton))
                                    .addComponent(jLabel3)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(85, 85, 85)
                                        .addComponent(jLabel10)))
                                .addGap(0, 0, Short.MAX_VALUE)))
                        .addContainerGap())))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel23)
                            .addComponent(jLabel24))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spelerVoornaamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spelerTussenField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spelerAchternaamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spelerStraatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(jLabel25)
                            .addComponent(jLabel26))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spelerPostcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spelerNummerFIeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(spelerPlaatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spelerTelThuisField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spelerThuisMobielField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(spelerEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spelerRatingField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(gewonnengeld, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spelerWijzigButton)
                            .addComponent(spelerVoegButton)
                            .addComponent(spelerVerwijderButton))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(spelerSchrijfButton)
                            .addComponent(spelerToernooiButton)
                            .addComponent(spelerMasterclassButton))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(text1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton2))
                        .addGap(7, 7, 7)
                        .addComponent(text2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(text3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1))
                .addContainerGap())
        );

        docentTab.addTab("Spelers", jPanel1);

        toernooiList.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "--Nieuw toernooi--", "1-1-2001", "2-2-2002" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        toernooiList.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                toernooiListMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(toernooiList);

        jLabel7.setText("Plaats");

        toernooiPlaatsField.setText("jTextField8");
        toernooiPlaatsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toernooiPlaatsFieldActionPerformed(evt);
            }
        });

        jLabel8.setText("Datum");

        toernooiDatumField.setText("jTextField11");

        jLabel11.setText("Tijd");

        toernooiTijdField.setText("jTextField12");

        jLabel12.setText("Inschrijfgeld");

        jLabel13.setText("Rondes");

        toernooiInschrijfgeldField.setText("jTextField13");

        toernooiRondesField.setText("jTextField14");

        toernooiInschrijvingenButton.setText("Lijst met spelers en hun inschrijfstatus");
        toernooiInschrijvingenButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toernooiInschrijvingenButtonActionPerformed(evt);
            }
        });

        toernooiWijzigButton.setText("Wijzig");
        toernooiWijzigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toernooiWijzigButtonActionPerformed(evt);
            }
        });

        toernooiToevoegButton.setText("Voeg toe");
        toernooiToevoegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                toernooiToevoegButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 240, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(toernooiPlaatsField)
                    .addComponent(toernooiDatumField)
                    .addComponent(toernooiTijdField)
                    .addComponent(toernooiInschrijfgeldField)
                    .addComponent(toernooiInschrijvingenButton, javax.swing.GroupLayout.DEFAULT_SIZE, 282, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(toernooiWijzigButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(toernooiToevoegButton))
                    .addComponent(toernooiRondesField)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel7)
                            .addComponent(jLabel8)
                            .addComponent(jLabel11)
                            .addComponent(jLabel13)
                            .addComponent(jLabel12))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 496, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toernooiPlaatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toernooiDatumField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel11)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toernooiTijdField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel12)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toernooiInschrijfgeldField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel13)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(toernooiRondesField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(toernooiWijzigButton)
                                .addGap(24, 24, 24))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                                .addComponent(toernooiToevoegButton)
                                .addGap(18, 18, 18)))
                        .addComponent(toernooiInschrijvingenButton, javax.swing.GroupLayout.PREFERRED_SIZE, 49, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(10, 10, 10))))
        );

        docentTab.addTab("Toernooien", jPanel2);
        getToernooiList();

        lijstDocenten.setModel(new javax.swing.AbstractListModel() {
            String[] strings = { "--Nieuwe Speler--", "Piet Pieterson", "Henk Henkstra" };
            public int getSize() { return strings.length; }
            public Object getElementAt(int i) { return strings[i]; }
        });
        lijstDocenten.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                lijstDocentenMouseClicked(evt);
            }
        });
        lijstDocenten.addListSelectionListener(new javax.swing.event.ListSelectionListener() {
            public void valueChanged(javax.swing.event.ListSelectionEvent evt) {
                lijstDocentenValueChanged(evt);
            }
        });
        jScrollPane9.setViewportView(lijstDocenten);

        jLabel33.setText("Voornaam");

        jLabel34.setText("Straat");

        jLabel35.setText("Telefoon - Thuis");

        jLabel36.setText("Telefoon - Mobiel");

        jLabel37.setText("Email");

        docentWijzigButton.setText("Wijzig");
        docentWijzigButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentWijzigButtonActionPerformed(evt);
            }
        });

        docentZoekButton.setText("Zoek op");
        docentZoekButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentZoekButtonActionPerformed(evt);
            }
        });

        jLabel38.setText("Rekeningnummer");

        docentZoekCombo.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "ID", "Naam" }));
        docentZoekCombo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentZoekComboActionPerformed(evt);
            }
        });

        docentToevoegButton.setText("Voeg docent toe");
        docentToevoegButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentToevoegButtonActionPerformed(evt);
            }
        });

        jLabel40.setText("Postcode");

        jLabel41.setText("Tussenvoegsel");

        jLabel42.setText("Achternaam");

        docentAchternaamField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentAchternaamFieldActionPerformed(evt);
            }
        });

        jLabel43.setText("Huisnr");

        docentHuisnummerField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentHuisnummerFieldActionPerformed(evt);
            }
        });

        jLabel44.setText("Plaats");

        docentPlaatsField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                docentPlaatsFieldActionPerformed(evt);
            }
        });

        docentVerwijderButton.setText("Verwijder");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane9, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel34)
                            .addComponent(jLabel40, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(docentPostcodeField))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel43, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(docentHuisnummerField))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(jLabel44)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(docentPlaatsField)
                                .addContainerGap())))
                    .addComponent(docentVastField)
                    .addComponent(docentMobielField)
                    .addComponent(docentEmailField)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(docentVoornaamField, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(docentTussenVoegselField))
                                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel33)
                                        .addGap(71, 71, 71)
                                        .addComponent(jLabel41)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel6Layout.createSequentialGroup()
                                        .addComponent(jLabel42)
                                        .addGap(0, 0, Short.MAX_VALUE))
                                    .addComponent(docentAchternaamField)))
                            .addComponent(docentStraatField, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(docentWijzigButton)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                                .addComponent(docentVerwijderButton)
                                .addGap(18, 18, 18)
                                .addComponent(docentToevoegButton))
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addComponent(docentZoekButton)
                                .addGap(18, 18, 18)
                                .addComponent(docentZoekCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(docentZoekField1)
                                    .addComponent(docentZoekField2)
                                    .addComponent(docentZoekField3)))
                            .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(docentRekeningField)
                                .addGroup(jPanel6Layout.createSequentialGroup()
                                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel35)
                                        .addComponent(jLabel36)
                                        .addComponent(jLabel37)
                                        .addComponent(jLabel38))
                                    .addGap(0, 0, Short.MAX_VALUE))))
                        .addContainerGap())))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel33)
                            .addComponent(jLabel41)
                            .addComponent(jLabel42))
                        .addGap(5, 5, 5)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docentVoornaamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentTussenVoegselField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentAchternaamField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel34)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docentStraatField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel40)
                            .addComponent(jLabel43)
                            .addComponent(jLabel44))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docentPostcodeField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentHuisnummerField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentPlaatsField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addComponent(jLabel35)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docentVastField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel36)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docentMobielField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel37)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docentEmailField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel38)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(docentRekeningField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docentWijzigButton)
                            .addComponent(docentToevoegButton)
                            .addComponent(docentVerwijderButton))
                        .addGap(52, 52, 52)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(docentZoekCombo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentZoekField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(docentZoekButton))
                        .addGap(7, 7, 7)
                        .addComponent(docentZoekField2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(docentZoekField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane9))
                .addContainerGap())
        );

        docentTab.addTab("Docenten", jPanel6);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(docentTab)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(docentTab)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void toernooiInschrijvingenButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toernooiInschrijvingenButtonActionPerformed
        // TODO add your handling code here:
        if (!toernooiList.isSelectionEmpty()) {
            inschrijvingToernooiFrame.setVisible(true);
            inschrijvingToernooiFrame.setSize(400, 300);
            maakToernooiFrame();
        } else {
            JOptionPane.showMessageDialog(this, "Selecteer een toernooi!");
        }

    }//GEN-LAST:event_toernooiInschrijvingenButtonActionPerformed

        private void lijstSpelersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lijstSpelersMouseClicked

        }//GEN-LAST:event_lijstSpelersMouseClicked

        private void toernooiListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_toernooiListMouseClicked
            if (toernooiList.getSelectedValue() != null) {
                fillToernooiFields((Toernooi) toernooiList.getSelectedValue());
            }
        }//GEN-LAST:event_toernooiListMouseClicked

        private void spelerSchrijfButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerSchrijfButtonActionPerformed
            // TODO add your handling code here:
            jFrame2.setVisible(true);
            jFrame2.setSize(400, 300);
        }//GEN-LAST:event_spelerSchrijfButtonActionPerformed

        private void spelerAchternaamFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerAchternaamFieldActionPerformed

        }//GEN-LAST:event_spelerAchternaamFieldActionPerformed

        private void spelerNummerFIeldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerNummerFIeldActionPerformed

        }//GEN-LAST:event_spelerNummerFIeldActionPerformed

        private void spelerPlaatsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerPlaatsFieldActionPerformed

        }//GEN-LAST:event_spelerPlaatsFieldActionPerformed

        private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
            zoeken();
        }//GEN-LAST:event_jButton2ActionPerformed

    private void toernooiPlaatsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toernooiPlaatsFieldActionPerformed

    }//GEN-LAST:event_toernooiPlaatsFieldActionPerformed

    private void spelerVoegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerVoegButtonActionPerformed
        toevoegenSpeler();
    }//GEN-LAST:event_spelerVoegButtonActionPerformed

    private void spelerWijzigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_spelerWijzigButtonActionPerformed
        wijzigenSpeler();
    }//GEN-LAST:event_spelerWijzigButtonActionPerformed
//kan die stringbuilder niet vervangen worden door String rating = Double.toString(selectedSpeler.getRating());
    private void lijstSpelersValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lijstSpelersValueChanged

        if (lijstSpelers.getSelectedIndex() == 0 || lijstSpelers.getSelectedValue() == null) {
            spelerWijzigButton.setEnabled(false);
            spelerVoegButton.setEnabled(true);
            spelerSchrijfButton.setEnabled(true);
            spelerVerwijderButton.setEnabled(false);
            reset();
        } else {
            Speler selectedSpeler = (Speler) lijstSpelers.getSelectedValue();
            spelerWijzigButton.setEnabled(true);
            spelerVoegButton.setEnabled(false);
            spelerSchrijfButton.setEnabled(true);
            spelerVerwijderButton.setEnabled(true);

            StringBuilder sb = new StringBuilder();
            sb.append(selectedSpeler.getRating());
            String rating = sb.toString();
            StringBuilder sb2 = new StringBuilder();
            sb2.append(selectedSpeler.getGeld());
            String gg = sb2.toString();

            spelerVoornaamField.setText(selectedSpeler.getVoornaam());
            spelerTussenField.setText(selectedSpeler.getTussenvoegsel());
            spelerAchternaamField.setText(selectedSpeler.getAchternaam());
            spelerStraatField.setText(selectedSpeler.getStraat());
            spelerNummerFIeld.setText(selectedSpeler.getHuisnummer());
            spelerPlaatsField.setText(selectedSpeler.getWoonplaats());
            spelerPostcodeField.setText(selectedSpeler.getPostcode());
            spelerTelThuisField.setText(selectedSpeler.getVNR());
            spelerThuisMobielField.setText(selectedSpeler.getMNR());
            spelerEmailField.setText(selectedSpeler.getEmail());

            spelerRatingField.setText(rating);
            gewonnengeld.setText(gg);
        }

    }//GEN-LAST:event_lijstSpelersValueChanged

    private void toernooiWijzigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toernooiWijzigButtonActionPerformed
        if (toernooiList.getSelectedValue() != null) {
            Toernooi toernooi = (Toernooi) toernooiList.getSelectedValue();
            updateToernooi(toernooi);
            toernooi.writeToDB();
        }
    }//GEN-LAST:event_toernooiWijzigButtonActionPerformed

    private void toernooiToevoegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toernooiToevoegButtonActionPerformed
        Toernooi toernooi = maakToernooi();
        if (toernooi != null) {
            toernooi.writeToDB();
            ((DefaultListModel) toernooiList.getModel()).addElement(toernooi);
        }
    }//GEN-LAST:event_toernooiToevoegButtonActionPerformed

    private void masterclassPlaatsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterclassPlaatsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_masterclassPlaatsFieldActionPerformed

    private void masterclassWijzigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterclassWijzigButtonActionPerformed
        if (masterclassList.getSelectedValue() != null) {
            MasterClass masterclass = (MasterClass) masterclassList.getSelectedValue();
            updateMasterClass(masterclass);
            masterclass.writeToDB();
        }
    }//GEN-LAST:event_masterclassWijzigButtonActionPerformed

    private void toernooiInschrijvingenButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_toernooiInschrijvingenButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_toernooiInschrijvingenButton1ActionPerformed

    private void masterclassToevoegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterclassToevoegButtonActionPerformed
        MasterClass masterclass = maakMasterClass();
        if (masterclass != null) {
            masterclass.writeToDB();
            ((DefaultListModel) masterclassList.getModel()).addElement(masterclass);
        }
    }//GEN-LAST:event_masterclassToevoegButtonActionPerformed

    private void masterclassListMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_masterclassListMouseClicked
        if (masterclassList.getSelectedValue() != null) {
            fillMasterClassFields((MasterClass) masterclassList.getSelectedValue());
        }
    }//GEN-LAST:event_masterclassListMouseClicked

    private void masterclassDocentButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterclassDocentButtonActionPerformed
        selectDocentFrame.setVisible(true);
        selectDocentFrame.setSize(400, 300);
    }//GEN-LAST:event_masterclassDocentButtonActionPerformed

    private void masterclassDocentWasSelectedButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_masterclassDocentWasSelectedButtonActionPerformed
        curDocent = (Docent) selecteerDocentList.getSelectedValue();
        selectDocentFrame.setVisible(false);
        masterclassDocentField.setText(curDocent.toString());
    }//GEN-LAST:event_masterclassDocentWasSelectedButtonActionPerformed

    private void lijstDocentenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lijstDocentenMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_lijstDocentenMouseClicked

    private void lijstDocentenValueChanged(javax.swing.event.ListSelectionEvent evt) {//GEN-FIRST:event_lijstDocentenValueChanged
        // TODO add your handling code here:
    }//GEN-LAST:event_lijstDocentenValueChanged

    private void docentWijzigButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentWijzigButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentWijzigButtonActionPerformed

    private void docentZoekButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentZoekButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentZoekButtonActionPerformed

    private void docentToevoegButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentToevoegButtonActionPerformed

    }//GEN-LAST:event_docentToevoegButtonActionPerformed

    private void docentAchternaamFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentAchternaamFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentAchternaamFieldActionPerformed

    private void docentHuisnummerFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentHuisnummerFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentHuisnummerFieldActionPerformed

    private void docentPlaatsFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentPlaatsFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentPlaatsFieldActionPerformed

    private void docentZoekComboActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_docentZoekComboActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_docentZoekComboActionPerformed

    private void fillZoekComboBox() {
        DefaultComboBoxModel dfcm = new DefaultComboBoxModel();
        String[] zoekopties = {"Toon alle spelers", "ID", "Postcode/Huisnummer", "Naam/Achternaam"};

        for (String zoekoptie : zoekopties) {
            dfcm.addElement(zoekoptie);
        }
        jComboBox1.setModel(dfcm);
    }

    private void zoeken() {
        try {
            Connection conn = FullHouseDatabase.getConnection();

            String selectedItem = (String) jComboBox1.getSelectedItem();
            String query = "";
            PreparedStatement stat;

            if (selectedItem.equals("ID")) {
                query = "SELECT * from persoon join speler on persoon_nr=speler_nr where persoon_nr not in(select docent_nr from docent ) and persoon_nr=? order by voornaam";
                stat = conn.prepareStatement(query);
                stat.setInt(1, Integer.parseInt(text1.getText()));
                ResultSet result = stat.executeQuery();
                maakSpeler(result);
            } else if (selectedItem.equals("Postcode/Huisnummer")) {
                query = "SELECT * FROM persoon join speler on persoon_nr=speler_nr where persoon_nr not in(select docent_nr from docent) and postcode like ? and huisnummer like ? order by voornaam";
                stat = conn.prepareStatement(query);
                stat.setString(1, (text1.getText()));
                stat.setString(2, "%" + text2.getText());
                ResultSet result = stat.executeQuery();
                maakSpeler(result);
            } else if (selectedItem.equals("Naam/Achternaam")) {
                query = "SELECT * FROM persoon join speler on persoon_nr=speler_nr where persoon_nr not in(select docent_nr from docent) and voornaam like ? and tussenvoegsel like ? and achternaam like? order by voornaam";
                stat = conn.prepareStatement(query);
                stat.setString(1, (text1.getText() + "%"));
                stat.setString(2, "%" + text2.getText() + "%");
                stat.setString(3, "%" + text3.getText() + "%");
                ResultSet result = stat.executeQuery();
                maakSpeler(result);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    private void reset() {
        spelerVoornaamField.setText("");
        spelerTussenField.setText("");
        spelerAchternaamField.setText("");
        spelerStraatField.setText("");
        spelerNummerFIeld.setText("");
        spelerPlaatsField.setText("");
        spelerPostcodeField.setText("");
        spelerTelThuisField.setText("");
        spelerThuisMobielField.setText("");
        spelerEmailField.setText("");
        spelerRatingField.setText("");
        gewonnengeld.setText("");
    }

    private void updateToernooi(Toernooi toernooi) {
        String plaats = toernooiPlaatsField.getText();
        String datumStr = toernooiDatumField.getText();
        String tijd = toernooiTijdField.getText();
        String inschrijfGeldStr = toernooiInschrijfgeldField.getText();
        String rondesStr = toernooiRondesField.getText();
        String max_spelersStr = "100";

        Date datum = null;
        int rondes = 0;
        int max_spelers = 0;
        double inschrijfGeld = 0;

        boolean valid = true;

        valid &= plaats.length() <= 50;
        valid &= tijd.length() <= 5;
        try {
            inschrijfGeld = Double.parseDouble(inschrijfGeldStr);
            rondes = Integer.parseInt(rondesStr);
            max_spelers = Integer.parseInt(max_spelersStr);
            datum = Date.valueOf(datumStr);
        } catch (NumberFormatException e) {
            System.out.println(e);
            valid = false;
        } catch (IllegalArgumentException e) {
            System.out.println("Wrong date!\t" + e);

            valid = false;
        }
        if (valid) {
            toernooi.setDatum(datum);
            toernooi.setRondes(rondes);
            toernooi.setMax_inschrijvingen(max_spelers);
            toernooi.setPlaats(plaats);
            toernooi.setTijd(tijd);
            toernooi.setInschrijfGeld(inschrijfGeld);
            toernooi.writeToDB();
        }
    }

    private Toernooi maakToernooi() {
        String plaats = toernooiPlaatsField.getText();
        String datumStr = toernooiDatumField.getText();
        String tijd = toernooiTijdField.getText();
        String inschrijfGeldStr = toernooiInschrijfgeldField.getText();
        String rondesStr = toernooiRondesField.getText();
        String max_spelersStr = "100";

        Date datum = null;
        int rondes = 0;
        int max_spelers = 0;
        double inschrijfGeld = 0;

        boolean valid = true;

        valid &= plaats.length() <= 50;
        valid &= tijd.length() <= 5;
        try {
            inschrijfGeld = Double.parseDouble(inschrijfGeldStr);
            rondes = Integer.parseInt(rondesStr);
            max_spelers = Integer.parseInt(max_spelersStr);
            datum = Date.valueOf(datumStr);
        } catch (NumberFormatException e) {
            System.out.println(e);
            valid = false;
        } catch (IllegalArgumentException e) {
            System.out.println("Wrong date!\t" + e);

            valid = false;
        }
        if (valid) {
            return new Toernooi(plaats, datum, tijd, inschrijfGeld, max_spelers, 8, rondes);
        } else {
            return null;
        }
    }

    private MasterClass maakMasterClass() {
        String plaats = masterclassPlaatsField.getText();
        String datumStr = masterclassDatumField.getText();
        String tijd = masterclassTijdField.getText();
        String inschrijfGeldStr = masterclassInschrijfgeldField.getText();
        String minRatingStr = masterclassMinRatingField.getText();
        String max_spelersStr = "100";

        Date datum = null;
        int minRating = 0;
        int max_spelers = 0;
        double inschrijfGeld = 0;

        boolean valid = true;

        valid &= plaats.length() <= 50;
        valid &= tijd.length() <= 5;
        if (curDocent == null) {
            valid = false;
        } else {
            try {
                inschrijfGeld = Double.parseDouble(inschrijfGeldStr);
                minRating = Integer.parseInt(minRatingStr);
                max_spelers = Integer.parseInt(max_spelersStr);
                datum = Date.valueOf(datumStr);
            } catch (NumberFormatException e) {
                System.out.println(e);
                valid = false;
            } catch (IllegalArgumentException e) {
                System.out.println("Wrong date!\t" + e);
                valid = false;
            }
        }
        if (valid) {
            return new MasterClass(plaats, datum, tijd, inschrijfGeld, max_spelers, minRating, curDocent);
        } else {
            return null;
        }

    }

    private void updateMasterClass(MasterClass mc) {
        String plaats = masterclassPlaatsField.getText();
        String datumStr = masterclassDatumField.getText();
        String tijd = masterclassTijdField.getText();
        String inschrijfGeldStr = masterclassInschrijfgeldField.getText();
        String minRatingStr = masterclassMinRatingField.getText();
        String max_spelersStr = "100";

        Date datum = null;
        int minRating = 0;
        int max_spelers = 0;
        double inschrijfGeld = 0;

        boolean valid = true;

        valid &= plaats.length() <= 50;
        valid &= tijd.length() <= 5;
        if (curDocent == null) {
            valid = false;
        } else {
            try {
                inschrijfGeld = Double.parseDouble(inschrijfGeldStr);
                minRating = Integer.parseInt(minRatingStr);
                max_spelers = Integer.parseInt(max_spelersStr);
                datum = Date.valueOf(datumStr);
            } catch (NumberFormatException e) {
                System.out.println(e);
                valid = false;
            } catch (IllegalArgumentException e) {
                System.out.println("Wrong date!\t" + e);
                valid = false;
            }
        }
        if (valid) {
            mc.setDatum(datum);
            mc.setMinRating(minRating);
            mc.setMax_inschrijvingen(max_spelers);
            mc.setPlaats(plaats);
            mc.setTijd(tijd);
            mc.setInschrijfGeld(inschrijfGeld);
            mc.setDocent(curDocent);
            mc.writeToDB();
        }
    }

    private void fillToernooiFields(Toernooi toernooi) {
        toernooiPlaatsField.setText(toernooi.getPlaats());
        toernooiDatumField.setText(toernooi.getDatum().toString());
        toernooiInschrijfgeldField.setText(Double.toString(toernooi.getInschrijfGeld()));
        toernooiTijdField.setText(toernooi.getTijd());
        toernooiRondesField.setText(Integer.toString(toernooi.getRondes()));
    }

    private void fillMasterClassFields(MasterClass masterclass) {
        masterclassPlaatsField.setText(masterclass.getPlaats());
        masterclassDatumField.setText(masterclass.getDatum().toString());
        masterclassInschrijfgeldField.setText(Double.toString(masterclass.getInschrijfGeld()));
        masterclassTijdField.setText(masterclass.getTijd());
        masterclassMinRatingField.setText(Integer.toString(masterclass.getMinRating()));
        masterclassDocentField.setText(masterclass.getDocent().toString());
        curDocent = masterclass.getDocent();
    }
    
    private void fillDocentFields(Docent docent){
        
    }

    //Toevoegen van speler aan de database
    private void toevoegenSpeler() {

        System.out.println(1);
        try {
            Connection conn = FullHouseDatabase.getConnection();
            String query = "select max(persoon_nr)from persoon";
            Statement stat = conn.createStatement();
            ResultSet result = stat.executeQuery(query);
            int pnr = 0;

            while (result.next()) {
                pnr = result.getInt("max(persoon_nr)") + 1;
                System.out.println(pnr);
            }
            String query2 = "INSERT INTO persoon VALUES(?,?,?,?,?,?,?,?, ?, ?, ?)";
            String query3 = "INSERT INTO speler VALUES(?,?,?)";

            PreparedStatement stat2 = conn.prepareStatement(query2);
            PreparedStatement stat3 = conn.prepareStatement(query3);
            stat3.setInt(1, pnr);
            stat3.setString(2, null);
            stat3.setString(3, null);

            stat2.setInt(1, pnr);
            stat2.setString(2, spelerVoornaamField.getText());
            stat2.setString(3, spelerTussenField.getText());
            stat2.setString(4, spelerAchternaamField.getText());
            stat2.setString(5, spelerStraatField.getText());
            stat2.setString(6, spelerNummerFIeld.getText());
            stat2.setString(7, spelerPostcodeField.getText());
            stat2.setString(8, spelerPlaatsField.getText());

            stat2.setString(9, spelerTelThuisField.getText());
            stat2.setString(10, spelerThuisMobielField.getText());
            stat2.setString(11, spelerEmailField.getText());
            System.out.println(stat2);
            stat2.executeUpdate();
            stat3.executeUpdate();

            showLijstSpelers();
            reset();
        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    //Wijzigen van spelers door middel van het ophalen van het geselecteerde persoon en met behulp van de persoon_nr een query te sturen 
    private void wijzigenDocent() {
        boolean valid = true;
        if (lijstDocenten.getSelectedValue() instanceof Docent) {
            Docent selectedDocent = (Docent) lijstDocenten.getSelectedValue();
            if (selectedDocent.existsInDB()) {
                selectedDocent.setAdres(docentStraatField.getText(), docentHuisnummerField.getText(), docentPlaatsField.getText(), docentPostcodeField.getText());
                selectedDocent.setNaam(docentVoornaamField.getText(), docentTussenVoegselField.getText(), docentAchternaamField.getText());
                selectedDocent.setContactGegevens(docentVastField.getText(), docentMobielField.getText(), docentEmailField.getText());
                try {
                    int rekening = Integer.parseInt(docentRekeningField.getText());
                    selectedDocent.setRekening(rekening);
                } catch (NumberFormatException e) {
                    JOptionPane.showMessageDialog(this, "Rekening moet een getal zijn!");
                    valid = false;
                }
            }
            if (valid) {
                selectedDocent.writeToDB();
            }
        }
    }

    private void toevoegenDocent() {

    }

    private void wijzigenSpeler() {
        try {

            Speler selectedSpeler = (Speler) lijstSpelers.getSelectedValue();
            int pnr = selectedSpeler.getPNR();
            Connection conn = FullHouseDatabase.getConnection();
            String query = "UPDATE persoon SET voornaam=?, tussenvoegsel=?, achternaam=?, straat=?, huisnummer=?, woonplaats=?, postcode=?, mobiel_nr=?, vast_nr=?, emailadres=?where persoon_nr= " + pnr;
//          String query2="UPDATE speler SET rating=?,  gewonnen_geld=? where speler_nr= "+pnr;
            PreparedStatement stat = conn.prepareStatement(query);
//          PreparedStatement stat2=conn.prepareStatement(query2);
            stat.setString(1, spelerVoornaamField.getText());
            stat.setString(2, spelerTussenField.getText());
            stat.setString(3, spelerAchternaamField.getText());
            stat.setString(4, spelerStraatField.getText());
            stat.setString(5, spelerNummerFIeld.getText());
            stat.setString(6, spelerPlaatsField.getText());
            stat.setString(7, spelerPostcodeField.getText());
            stat.setString(8, spelerTelThuisField.getText());
            stat.setString(9, spelerThuisMobielField.getText());
            stat.setString(10, spelerEmailField.getText());
//          stat2.setDouble(1, Double.parseDouble(spelerRatingField.getText()));
//          stat2.setDouble(2, Double.parseDouble(gewonnengeld.getText()));
            System.out.println(stat);
            int effectedRecords = stat.executeUpdate();
//          int effectedRecords2=stat2.executeUpdate();

            System.out.println("Aantal gewijzigde records in persoon: " + effectedRecords);
//          System.out.println("Aantal gewijzigde records in speler:" + effectedRecords2);
            showLijstSpelers();
        } catch (Exception e) {
            System.out.println(e);
        }
    }

    // Genereert een lijst van alle spelers afhankelijk van de zoekopdracht  
    private void showLijstSpelers() {
        try {

            Connection conn = FullHouseDatabase.getConnection();
            Statement stat = conn.createStatement();
            String query = "SELECT * FROM speler join persoon on speler_nr=persoon_nr where persoon_nr not in (select docent_nr from docent) order by voornaam";
            ResultSet result = stat.executeQuery(query);

            System.out.println(query);
            maakSpeler(result);
        } catch (SQLException e) {
            System.out.println(e);
        }
    }

    //Verwijderen van spelers door het ophalen van de geselecteerde item in lijstSpelers
    private void verwijderenSpeler() {
        try {

            Connection conn = FullHouseDatabase.getConnection();

            Speler selectedSpeler = (Speler) lijstSpelers.getSelectedValue();

            String query = "DELETE  from persoon where persoon_nr=?";
            PreparedStatement stat = conn.prepareStatement(query);
            stat.setInt(1, selectedSpeler.getPNR());
            stat.executeUpdate();
            ((DefaultListModel) lijstSpelers.getModel()).removeElement(selectedSpeler);
            jComboBox1.setSelectedIndex(2);
            jComboBox1.setSelectedIndex(0);
            lijstSpelers.setSelectedIndex(0);

        } catch (SQLException e) {
            System.out.println(e);
        }

    }

    private void maakSpeler(ResultSet rs) {
        try {

            DefaultListModel dm = new DefaultListModel();
            dm.addElement("--Nieuwe Speler--");
            while (rs.next()) {
                Speler speler = new Speler();
                speler.setNr(rs.getInt("speler_nr"));
                speler.setNaam(rs.getString("voornaam"), rs.getString("tussenvoegsel"), rs.getString("achternaam"));
                speler.setAdres(rs.getString("straat"), rs.getString("huisnummer"), rs.getString("woonplaats"), rs.getString("postcode"));
                speler.setContactGegevens(rs.getString("mobiel_nr"), rs.getString("vast_nr"), rs.getString("emailadres"));
                speler.setRating(rs.getDouble("rating"));
                speler.setGewonnenGeld(rs.getDouble("gewonnen_geld"));

                dm.addElement(speler);
            }
            lijstSpelers.setModel(dm);
        } catch (Exception e) {

        }
    }

    //Haalt spelers op met evt een extra WHERE query (bv "naam = 'Peter'")
    private ArrayList<Speler> getSpelers(String whereClause) {
        String query = "SELECT * FROM speler inner join persoon on speler_nr=persoon_nr where persoon_nr not in (select docent_nr from docent)";
        if (!(whereClause == null || whereClause.isEmpty())) {
            query += " AND " + whereClause;
        }
        query += ";";
        ArrayList<Speler> spelers = new ArrayList();
        try {
            Connection conn = FullHouseDatabase.getConnection();
            Statement stat = conn.createStatement();
            ResultSet result = stat.executeQuery(query);

            System.out.println(query);
            while (result.next()) {

                Speler speler = new Speler();
                speler.setNr(result.getInt("speler_nr"));
                speler.setNaam(result.getString("voornaam"), result.getString("tussenvoegsel"), result.getString("achternaam"));
                speler.setAdres(result.getString("straat"), result.getString("huisnummer"), result.getString("woonplaats"), result.getString("postcode"));
                speler.setContactGegevens(result.getString("mobiel_nr"), result.getString("vast_nr"), result.getString("emailadres"));
                speler.setRating(result.getDouble("rating"));
                speler.setGewonnenGeld(result.getDouble("gewonnen_geld"));
                spelers.add(speler);
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
        return spelers;
    }

    private void getToernooiList() {
        DefaultListModel<Toernooi> model = new DefaultListModel();
        try {

            String query = "SELECT toernooi_nr FROM toernooi JOIN event on toernooi_nr = event_nr ORDER BY datum DESC; ";
            ResultSet result = FullHouseDatabase.getConnection().createStatement().executeQuery(query);
            while (result.next()) {
                model.addElement(new Toernooi(result.getInt("toernooi_nr")));
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
        toernooiList.setModel(model);
    }

    private void getMasterClassList() {
        DefaultListModel<MasterClass> model = new DefaultListModel();
        try {

            String query = "SELECT masterclass_nr FROM masterclass JOIN event on masterclass_nr = event_nr ORDER BY datum DESC; ";
            ResultSet result = FullHouseDatabase.getConnection().createStatement().executeQuery(query);
            while (result.next()) {
                model.addElement(new MasterClass(result.getInt("masterclass_nr")));
            }
        } catch (SQLException e) {
            System.out.println(e);
        }
        masterclassList.setModel(model);
    }

    private void maakToernooiFrame() {
        ArrayList<ToernooiInschrijving> inschrijvingen = ToernooiInschrijving.getToernooiInschrijvingByToernooi((Toernooi) toernooiList.getSelectedValue());
        DefaultTableModel mdl = new DefaultTableModel();
        mdl.addColumn("Speler");
        mdl.addColumn("Heeft betaald");
        mdl.setRowCount(inschrijvingen.size());
        totaaInschrijvingenlField.setText(Integer.toString(inschrijvingen.size()));
        for (int i = 0; i < inschrijvingen.size(); i++) {
            mdl.setValueAt(inschrijvingen.get(i).getSpeler(), i, 0);
            mdl.setValueAt(inschrijvingen.get(i).isBetaald(), i, 1);
        }
        toernooiInschrijvingTable.setModel(mdl);
    }

    private void fillSelecteerDocentList() {
        DefaultListModel mdl = new DefaultListModel();
        try {
            String query = "SELECT * FROM docent left join persoon on persoon_nr = docent_nr;";
            ResultSet result = FullHouseDatabase.getConnection().createStatement().executeQuery(query);

            while (result.next()) {
                Docent docent = new Docent();
                docent.setNaam(result.getString("voornaam"), result.getString("tussenvoegsel"), result.getString("achternaam"));
                docent.setAdres(result.getString("straat"), result.getString("huisnummer"), result.getString("woonplaats"), result.getString("postcode"));
                docent.setContactGegevens(result.getString("mobiel_nr"), result.getString("vast_nr"), result.getString("emailadres"));
                docent.setRekening(result.getInt("rekening_nr"));
                docent.setNr(result.getInt("persoon_nr"));
                mdl.addElement(docent);
            }

        } catch (SQLException e) {
            System.out.println(e);
        }
        selecteerDocentList.setModel(mdl);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;

                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GUI.class
                    .getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JTextField docentAchternaamField;
    private javax.swing.JTextField docentEmailField;
    private javax.swing.JTextField docentHuisnummerField;
    private javax.swing.JTextField docentMobielField;
    private javax.swing.JTextField docentPlaatsField;
    private javax.swing.JTextField docentPostcodeField;
    private javax.swing.JTextField docentRekeningField;
    private javax.swing.JTextField docentStraatField;
    private javax.swing.JTabbedPane docentTab;
    private javax.swing.JButton docentToevoegButton;
    private javax.swing.JTextField docentTussenVoegselField;
    private javax.swing.JTextField docentVastField;
    private javax.swing.JButton docentVerwijderButton;
    private javax.swing.JTextField docentVoornaamField;
    private javax.swing.JButton docentWijzigButton;
    private javax.swing.JButton docentZoekButton;
    private javax.swing.JComboBox docentZoekCombo;
    private javax.swing.JTextField docentZoekField1;
    private javax.swing.JTextField docentZoekField2;
    private javax.swing.JTextField docentZoekField3;
    private javax.swing.JTextField gewonnengeld;
    private javax.swing.JFrame inschrijvingToernooiFrame;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton6;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JComboBox jComboBox2;
    private javax.swing.JFrame jFrame2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel24;
    private javax.swing.JLabel jLabel25;
    private javax.swing.JLabel jLabel26;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel34;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JLabel jLabel37;
    private javax.swing.JLabel jLabel38;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel40;
    private javax.swing.JLabel jLabel41;
    private javax.swing.JLabel jLabel42;
    private javax.swing.JLabel jLabel43;
    private javax.swing.JLabel jLabel44;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JList jList3;
    private javax.swing.JList jList5;
    private javax.swing.JList jList6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JScrollPane jScrollPane7;
    private javax.swing.JScrollPane jScrollPane8;
    private javax.swing.JScrollPane jScrollPane9;
    private javax.swing.JTextField jTextField15;
    private javax.swing.JTextField jTextField16;
    private javax.swing.JTextField jTextField17;
    private javax.swing.JTextField jTextField18;
    private javax.swing.JTextField jTextField19;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JList lijstDocenten;
    private javax.swing.JList lijstSpelers;
    private javax.swing.JTextField masterclassDatumField;
    private javax.swing.JButton masterclassDocentButton;
    private javax.swing.JTextField masterclassDocentField;
    private javax.swing.JButton masterclassDocentWasSelectedButton;
    private javax.swing.JTextField masterclassInschrijfgeldField;
    private javax.swing.JList masterclassList;
    private javax.swing.JTextField masterclassMinRatingField;
    private javax.swing.JTextField masterclassPlaatsField;
    private javax.swing.JTextField masterclassTijdField;
    private javax.swing.JButton masterclassToevoegButton;
    private javax.swing.JButton masterclassWijzigButton;
    private javax.swing.JFrame selectDocentFrame;
    private javax.swing.JList selecteerDocentList;
    private javax.swing.JTextField spelerAchternaamField;
    private javax.swing.JTextField spelerEmailField;
    private javax.swing.JRadioButton spelerMasterclassButton;
    private javax.swing.JTextField spelerNummerFIeld;
    private javax.swing.JTextField spelerPlaatsField;
    private javax.swing.JTextField spelerPostcodeField;
    private javax.swing.JTextField spelerRatingField;
    private javax.swing.JButton spelerSchrijfButton;
    private javax.swing.JTextField spelerStraatField;
    private javax.swing.JTextField spelerTelThuisField;
    private javax.swing.JTextField spelerThuisMobielField;
    private javax.swing.JRadioButton spelerToernooiButton;
    private javax.swing.JTextField spelerTussenField;
    private javax.swing.JButton spelerVerwijderButton;
    private javax.swing.JButton spelerVoegButton;
    private javax.swing.JTextField spelerVoornaamField;
    private javax.swing.JButton spelerWijzigButton;
    private javax.swing.JTextField text1;
    private javax.swing.JTextField text2;
    private javax.swing.JTextField text3;
    private javax.swing.JTextField toernooiDatumField;
    private javax.swing.JTextField toernooiInschrijfgeldField;
    private javax.swing.JTable toernooiInschrijvingTable;
    private javax.swing.JButton toernooiInschrijvingenButton;
    private javax.swing.JButton toernooiInschrijvingenButton1;
    private javax.swing.JList toernooiList;
    private javax.swing.JTextField toernooiPlaatsField;
    private javax.swing.JTextField toernooiRondesField;
    private javax.swing.JTextField toernooiTijdField;
    private javax.swing.JButton toernooiToevoegButton;
    private javax.swing.JButton toernooiWijzigButton;
    private javax.swing.JTextField totaaInschrijvingenlField;
    // End of variables declaration//GEN-END:variables

}
